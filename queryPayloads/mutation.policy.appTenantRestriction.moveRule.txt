mutation policyAppTenantRestrictionMoveRule ( $policyMoveRuleInput:PolicyMoveRuleInput! $appTenantRestrictionPolicyMutationInput:AppTenantRestrictionPolicyMutationInput ) {
	policy ( ) {
		appTenantRestriction ( input:$appTenantRestrictionPolicyMutationInput  )  {
			moveRuleAppTenantRestrictionPolicyMutations: moveRule ( input:$policyMoveRuleInput   ) {
				ruleAppTenantRestrictionRuleMutationPayload: rule {
					auditAppTenantRestrictionRulePayload: audit {
						updatedTime
						updatedBy
					}
					ruleAppTenantRestrictionRulePayload: rule {
						id
						name
						description
						index
						sectionAppTenantRestrictionRule: section {
							id
							name
						}

						enabled
						applicationAppTenantRestrictionRule: application {
							id
							name
						}

						headersAppTenantRestrictionRule: headers {
							name
							value
						}

						sourceAppTenantRestrictionRule: source {
							ip
							hostAppTenantRestrictionSource: host {
								id
								name
							}
							siteAppTenantRestrictionSource: site {
								id
								name
							}
							subnet
							ipRangeAppTenantRestrictionSource: ipRange {
								from
								to
							}
							globalIpRangeAppTenantRestrictionSource: globalIpRange {
								id
								name
							}
							networkInterfaceAppTenantRestrictionSource: networkInterface {
								id
								name
							}
							siteNetworkSubnetAppTenantRestrictionSource: siteNetworkSubnet {
								id
								name
							}
							floatingSubnetAppTenantRestrictionSource: floatingSubnet {
								id
								name
							}
							userAppTenantRestrictionSource: user {
								id
								name
							}
							usersGroupAppTenantRestrictionSource: usersGroup {
								id
								name
							}
							groupAppTenantRestrictionSource: group {
								id
								name
							}
							systemGroupAppTenantRestrictionSource: systemGroup {
								id
								name
							}
							countryAppTenantRestrictionSource: country {
								id
								name
							}
						}

						scheduleAppTenantRestrictionRule: schedule {
							activeOnPolicySchedule: activeOn
							customTimeframePolicySchedule: customTimeframe {
								from
								to
							}
							customRecurringPolicySchedule: customRecurring {
								from
								to
								days
							}
						}

						actionAppTenantRestrictionRule: action
						severityAppTenantRestrictionRule: severity
					}
					propertiesAppTenantRestrictionRulePayload: properties
				}

				statusAppTenantRestrictionRuleMutationPayload: status
				errorsAppTenantRestrictionRuleMutationPayload: errors {
					errorMessage
					errorCode
				}

			}
		}

	}	
}