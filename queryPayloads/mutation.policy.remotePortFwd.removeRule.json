{
    "operationName": "policyRemotePortFwdRemoveRule",
    "query": "mutation policyRemotePortFwdRemoveRule ( $remotePortFwdRemoveRuleInput:RemotePortFwdRemoveRuleInput! $remotePortFwdPolicyMutationInput:RemotePortFwdPolicyMutationInput ) { policy ( ) { remotePortFwd ( input:$remotePortFwdPolicyMutationInput ) { removeRule ( input:$remotePortFwdRemoveRuleInput ) {  remotePortFwdRulePayloadRule: rule { audit {  updatedTime  updatedBy } rule {  id  name  description  index  policySectionInfoSection: section {  id  name  }  enabled  forwardIcmp  allocatedIpRefExternalIp: externalIp {  id  name  }  portRangeExternalPortRange: externalPortRange {  from  to  }  internalIp  portRangeInternalPortRange: internalPortRange {  from  to  }  remotePortFwdRemoteIpsRemoteIPs: remoteIPs {  ip  ipAddressRangeIpRange: ipRange {  from  to  }  subnet  globalIpRangeRefGlobalIpRange: globalIpRange {  id  name  }  }  remotePortFwdRestrictionTypeRestrictionType: restrictionType  policyRuleTrackingAlertTracking: tracking {  enabled  policyRuleTrackingFrequencyEnumFrequency: frequency  subscriptionGroupRefSubscriptionGroup: subscriptionGroup {  id  name  }  subscriptionWebhookRefWebhook: webhook {  id  name  }  subscriptionMailingListRefMailingList: mailingList {  id  name  }  }  } properties  } policyMutationStatusStatus: status  policyMutationErrorErrors: errors { errorMessage errorCode  }  } } } }",
    "variables": {
        "remotePortFwdPolicyMutationInput": {
            "policyMutationRevisionInput": {
                "id": {
                    "id": "ID"
                }
            }
        },
        "remotePortFwdRemoveRuleInput": {
            "id": {
                "id": "ID"
            }
        }
    }
}