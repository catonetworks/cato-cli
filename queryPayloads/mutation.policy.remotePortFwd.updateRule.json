{
    "operationName": "policyRemotePortFwdUpdateRule",
    "query": "mutation policyRemotePortFwdUpdateRule ( $remotePortFwdPolicyMutationInput:RemotePortFwdPolicyMutationInput $remotePortFwdUpdateRuleInput:RemotePortFwdUpdateRuleInput!) {\n\tpolicy ( ) {\nmutation.policy.remotePortFwd.updateRuleremotePortFwd ( input:$remotePortFwdPolicyMutationInput  )  {\nmutation.policy.remotePortFwd.updateRule\tupdateRule ( input:$remotePortFwdUpdateRuleInput   ) {\nmutation.policy.remotePortFwd.updateRule\t\trule {\nmutation.policy.remotePortFwd.updateRule\t\t\taudit {\nmutation.policy.remotePortFwd.updateRule\t\t\t\tupdatedTime\nmutation.policy.remotePortFwd.updateRule\t\t\t\tupdatedBy\nmutation.policy.remotePortFwd.updateRule\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\trule {\nmutation.policy.remotePortFwd.updateRule\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\tdescription\nmutation.policy.remotePortFwd.updateRule\t\t\t\tindex\nmutation.policy.remotePortFwd.updateRule\t\t\t\tsection {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\tenabled\nmutation.policy.remotePortFwd.updateRule\t\t\t\tforwardIcmp\nmutation.policy.remotePortFwd.updateRule\t\t\t\texternalIp {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\texternalPortRange {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tfrom\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tto\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\tinternalIp\nmutation.policy.remotePortFwd.updateRule\t\t\t\tinternalPortRange {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tfrom\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tto\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\tremoteIPs {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tip\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tipRange {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tfrom\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tto\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tsubnet\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tglobalIpRange {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\trestrictionType\nmutation.policy.remotePortFwd.updateRule\t\t\t\ttracking {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tenabled\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tfrequency\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tsubscriptionGroup {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\twebhook {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\tmailingList {\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tid\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t\tname\nmutation.policy.remotePortFwd.updateRule\t\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\t}\nmutation.policy.remotePortFwd.updateRule\t\t\tproperties\nmutation.policy.remotePortFwd.updateRule\t\t}\nmutation.policy.remotePortFwd.updateRule\t\tstatus\nmutation.policy.remotePortFwd.updateRule\t\terrors {\nmutation.policy.remotePortFwd.updateRule\t\t\terrorMessage\nmutation.policy.remotePortFwd.updateRule\t\t\terrorCode\nmutation.policy.remotePortFwd.updateRule\t\t}\nmutation.policy.remotePortFwd.updateRule\t}\nmutation.policy.remotePortFwd.updateRule}\n\t}\t\n}",
    "variables": {
        "remotePortFwdPolicyMutationInput": {
            "policyMutationRevisionInput": {
                "id": "id"
            }
        },
        "remotePortFwdUpdateRuleInput": {
            "id": "id",
            "remotePortFwdUpdateRuleDataInput": {
                "description": "string",
                "enabled": true,
                "externalIp": {
                    "by": "ID",
                    "input": "string"
                },
                "externalPortRange": {
                    "from": "example_value",
                    "to": "example_value"
                },
                "forwardIcmp": true,
                "internalIp": "example_value",
                "internalPortRange": {
                    "from": "example_value",
                    "to": "example_value"
                },
                "name": "string",
                "remoteIPs": {
                    "globalIpRange": {
                        "by": "ID",
                        "input": "string"
                    },
                    "ip": [
                        "example1",
                        "example2"
                    ],
                    "ipRange": {
                        "from": "example_value",
                        "to": "example_value"
                    },
                    "subnet": [
                        "example1",
                        "example2"
                    ]
                },
                "restrictionType": "ALLOW_LIST",
                "tracking": {
                    "enabled": true,
                    "frequency": "HOURLY",
                    "mailingList": {
                        "by": "ID",
                        "input": "string"
                    },
                    "subscriptionGroup": {
                        "by": "ID",
                        "input": "string"
                    },
                    "webhook": {
                        "by": "ID",
                        "input": "string"
                    }
                }
            }
        }
    }
}