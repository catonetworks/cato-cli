mutation policyRemotePortFwdUpdateRule ( $accountId:ID! $remotePortFwdPolicyMutationInput:RemotePortFwdPolicyMutationInput $remotePortFwdUpdateRuleInput:RemotePortFwdUpdateRuleInput!) {
	policy ( accountId:$accountId input:$remotePortFwdPolicyMutationInput input:$remotePortFwdUpdateRuleInput ) {
mutation.policy.remotePortFwd.updateRuleremotePortFwd ( input:$remotePortFwdPolicyMutationInput  )  {
mutation.policy.remotePortFwd.updateRule	updateRule ( input:$remotePortFwdUpdateRuleInput   ) {
mutation.policy.remotePortFwd.updateRule		rule {
mutation.policy.remotePortFwd.updateRule			audit {
mutation.policy.remotePortFwd.updateRule				updatedTime
mutation.policy.remotePortFwd.updateRule				updatedBy
mutation.policy.remotePortFwd.updateRule			}
mutation.policy.remotePortFwd.updateRule			rule {
mutation.policy.remotePortFwd.updateRule				id
mutation.policy.remotePortFwd.updateRule				name
mutation.policy.remotePortFwd.updateRule				description
mutation.policy.remotePortFwd.updateRule				index
mutation.policy.remotePortFwd.updateRule				section {
mutation.policy.remotePortFwd.updateRule					id
mutation.policy.remotePortFwd.updateRule					name
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule				enabled
mutation.policy.remotePortFwd.updateRule				forwardIcmp
mutation.policy.remotePortFwd.updateRule				externalIp {
mutation.policy.remotePortFwd.updateRule					id
mutation.policy.remotePortFwd.updateRule					name
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule				externalPortRange {
mutation.policy.remotePortFwd.updateRule					from
mutation.policy.remotePortFwd.updateRule					to
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule				internalIp
mutation.policy.remotePortFwd.updateRule				internalPortRange {
mutation.policy.remotePortFwd.updateRule					from
mutation.policy.remotePortFwd.updateRule					to
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule				remoteIPs {
mutation.policy.remotePortFwd.updateRule					ip
mutation.policy.remotePortFwd.updateRule					ipRange {
mutation.policy.remotePortFwd.updateRule						from
mutation.policy.remotePortFwd.updateRule						to
mutation.policy.remotePortFwd.updateRule					}
mutation.policy.remotePortFwd.updateRule					subnet
mutation.policy.remotePortFwd.updateRule					globalIpRange {
mutation.policy.remotePortFwd.updateRule						id
mutation.policy.remotePortFwd.updateRule						name
mutation.policy.remotePortFwd.updateRule					}
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule				restrictionType
mutation.policy.remotePortFwd.updateRule				tracking {
mutation.policy.remotePortFwd.updateRule					enabled
mutation.policy.remotePortFwd.updateRule					frequency
mutation.policy.remotePortFwd.updateRule					subscriptionGroup {
mutation.policy.remotePortFwd.updateRule						id
mutation.policy.remotePortFwd.updateRule						name
mutation.policy.remotePortFwd.updateRule					}
mutation.policy.remotePortFwd.updateRule					webhook {
mutation.policy.remotePortFwd.updateRule						id
mutation.policy.remotePortFwd.updateRule						name
mutation.policy.remotePortFwd.updateRule					}
mutation.policy.remotePortFwd.updateRule					mailingList {
mutation.policy.remotePortFwd.updateRule						id
mutation.policy.remotePortFwd.updateRule						name
mutation.policy.remotePortFwd.updateRule					}
mutation.policy.remotePortFwd.updateRule				}
mutation.policy.remotePortFwd.updateRule			}
mutation.policy.remotePortFwd.updateRule			properties
mutation.policy.remotePortFwd.updateRule		}
mutation.policy.remotePortFwd.updateRule		status
mutation.policy.remotePortFwd.updateRule		errors {
mutation.policy.remotePortFwd.updateRule			errorMessage
mutation.policy.remotePortFwd.updateRule			errorCode
mutation.policy.remotePortFwd.updateRule		}
mutation.policy.remotePortFwd.updateRule	}
mutation.policy.remotePortFwd.updateRule}
	}	
}