{
    "operationName": "policySocketLanAddRule",
    "query": "mutation policySocketLanAddRule ( $socketLanAddRuleInput:SocketLanAddRuleInput! $socketLanPolicyMutationInput:SocketLanPolicyMutationInput ) { policy ( ) { socketLan ( input:$socketLanPolicyMutationInput ) { addRule ( input:$socketLanAddRuleInput ) { socketLanRulePayloadRule: rule { audit { updatedTime updatedBy } rule { id name description index policySectionInfoSection: section { id name } enabled socketLanFirewallRulePayloadFirewall: firewall { policyElementAuditAudit: audit { updatedTime updatedBy } socketLanFirewallRuleRule: rule { id name description index policySectionInfoSection: section { id name } enabled socketLanFirewallSourceSource: source { vlan mac ipAddressRangeIpRange: ipRange {  from  to } groupRefGroup: group {  id  name } subnet siteRefSite: site {  id  name } networkInterfaceRefNetworkInterface: networkInterface {  id  name } systemGroupRefSystemGroup: systemGroup {  id  name } hostRefHost: host {  id  name } ip globalIpRangeRefGlobalIpRange: globalIpRange {  id  name } floatingSubnetRefFloatingSubnet: floatingSubnet {  id  name } siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {  id  name } } socketLanFirewallDestinationDestination: destination { vlan ipAddressRangeIpRange: ipRange {  from  to } subnet siteRefSite: site {  id  name } networkInterfaceRefNetworkInterface: networkInterface {  id  name } systemGroupRefSystemGroup: systemGroup {  id  name } hostRefHost: host {  id  name } ip globalIpRangeRefGlobalIpRange: globalIpRange {  id  name } groupRefGroup: group {  id  name } floatingSubnetRefFloatingSubnet: floatingSubnet {  id  name } siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {  id  name } } socketLanFirewallDirectionDirection: direction socketLanFirewallApplicationApplication: application { applicationRefApplication: application {  id  name } customApplicationRefCustomApp: customApp {  id  name } domain fqdn ip subnet ipAddressRangeIpRange: ipRange {  from  to } globalIpRangeRefGlobalIpRange: globalIpRange {  id  name } } socketLanFirewallServiceTypeService: service { simpleServiceSimple: simple {  simpleServiceTypeName: name } serviceRefStandard: standard {  id  name } customServiceCustom: custom {  port  portRangePortRange: portRange { from to  } ipProtocolProtocol: protocol } } socketLanFirewallActionAction: action policyTrackingTracking: tracking { policyRuleTrackingEventEvent: event {  enabled } policyRuleTrackingAlertAlert: alert {  enabled  policyRuleTrackingFrequencyEnumFrequency: frequency  subscriptionGroupRefSubscriptionGroup: subscriptionGroup { id name  } subscriptionWebhookRefWebhook: webhook { id name  } subscriptionMailingListRefMailingList: mailingList { id name  }  } } } policyElementPropertiesEnumProperties: properties } socketLanSiteSite: site { siteRefSite: site { id name } groupRefGroup: group { id name } } socketLanSourceSource: source { vlan ipAddressRangeIpRange: ipRange { from to } groupRefGroup: group { id name } subnet networkInterfaceRefNetworkInterface: networkInterface { id name } systemGroupRefSystemGroup: systemGroup { id name } hostRefHost: host { id name } ip globalIpRangeRefGlobalIpRange: globalIpRange { id name } floatingSubnetRefFloatingSubnet: floatingSubnet { id name } siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet { id name } } socketLanDestinationDestination: destination { vlan ipAddressRangeIpRange: ipRange { from to } subnet networkInterfaceRefNetworkInterface: networkInterface { id name } systemGroupRefSystemGroup: systemGroup { id name } hostRefHost: host { id name } ip globalIpRangeRefGlobalIpRange: globalIpRange { id name } groupRefGroup: group { id name } floatingSubnetRefFloatingSubnet: floatingSubnet { id name } siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet { id name } } socketLanDirectionDirection: direction socketLanServiceService: service { simpleServiceSimple: simple { simpleServiceTypeName: name } customServiceCustom: custom { port portRangePortRange: portRange { from to } ipProtocolProtocol: protocol } } socketLanNatSettingsNat: nat { enabled socketLanNatTypeNatType: natType } socketLanTransportTypeTransport: transport } properties } policyMutationStatusStatus: status policyMutationErrorErrors: errors { errorMessage errorCode } } } } }",
    "variables": {
        "socketLanAddRuleInput": {
            "policyRulePositionInput": {
                "position": {
                    "position": "enum(PolicyRulePositionEnum)"
                },
                "ref": {
                    "ref": "ID"
                }
            },
            "socketLanAddRuleDataInput": {
                "description": {
                    "description": "String"
                },
                "destination": {
                    "floatingSubnet": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "globalIpRange": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "group": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "host": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "ip": {
                        "ip": [
                            "IPAddress"
                        ]
                    },
                    "ipRange": {
                        "from": {
                            "from": "IPAddress"
                        },
                        "to": {
                            "to": "IPAddress"
                        }
                    },
                    "networkInterface": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "siteNetworkSubnet": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "subnet": {
                        "subnet": [
                            "NetworkSubnet"
                        ]
                    },
                    "systemGroup": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "vlan": {
                        "vlan": [
                            "Vlan"
                        ]
                    }
                },
                "direction": {
                    "direction": "enum(SocketLanDirection)"
                },
                "enabled": {
                    "enabled": "Boolean"
                },
                "name": {
                    "name": "String"
                },
                "nat": {
                    "enabled": {
                        "enabled": "Boolean"
                    },
                    "natType": {
                        "natType": "enum(SocketLanNatType)"
                    }
                },
                "service": {
                    "custom": {
                        "port": {
                            "port": [
                                "Port"
                            ]
                        },
                        "portRange": {
                            "from": {
                                "from": "Port"
                            },
                            "to": {
                                "to": "Port"
                            }
                        },
                        "protocol": {
                            "protocol": "enum(IpProtocol)"
                        }
                    },
                    "simple": {
                        "name": {
                            "name": "enum(SimpleServiceType)"
                        }
                    }
                },
                "site": {
                    "group": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "site": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    }
                },
                "source": {
                    "floatingSubnet": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "globalIpRange": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "group": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "host": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "ip": {
                        "ip": [
                            "IPAddress"
                        ]
                    },
                    "ipRange": {
                        "from": {
                            "from": "IPAddress"
                        },
                        "to": {
                            "to": "IPAddress"
                        }
                    },
                    "networkInterface": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "siteNetworkSubnet": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "subnet": {
                        "subnet": [
                            "NetworkSubnet"
                        ]
                    },
                    "systemGroup": {
                        "by": {
                            "by": "enum(ObjectRefBy)"
                        },
                        "input": {
                            "input": "String"
                        }
                    },
                    "vlan": {
                        "vlan": [
                            "Vlan"
                        ]
                    }
                },
                "transport": {
                    "transport": "enum(SocketLanTransportType)"
                }
            }
        },
        "socketLanPolicyMutationInput": {
            "policyMutationRevisionInput": {
                "id": {
                    "id": "ID"
                }
            }
        }
    }
}