mutation policySocketLanDiscardPolicyRevision ( $policyDiscardRevisionInput:PolicyDiscardRevisionInput $socketLanPolicyMutationInput:SocketLanPolicyMutationInput ) {
	policy ( ) {
		socketLan ( input:$socketLanPolicyMutationInput  )  {
			discardPolicyRevisionSocketLanPolicyMutations: discardPolicyRevision ( input:$policyDiscardRevisionInput   ) {
				policySocketLanPolicyMutationPayload: policy {
					enabled
					rulesSocketLanPolicy: rules {
						auditSocketLanRulePayload: audit {
							updatedTime
							updatedBy
						}

						ruleSocketLanRulePayload: rule {
							id
							name
							description
							index
							sectionSocketLanRule: section {
								id
								name
							}
							enabled
							firewallSocketLanRule: firewall {
								auditSocketLanFirewallRulePayload: audit {
									updatedTime
									updatedBy
								}

								ruleSocketLanFirewallRulePayload: rule {
									id
									name
									description
									index
									sectionSocketLanFirewallRule: section {
										id
										name
									}
									enabled
									sourceSocketLanFirewallRule: source {
										vlan
										mac
										ipRangeSocketLanFirewallSource: ipRange {
											from
											to
										}

										groupSocketLanFirewallSource: group {
											id
											name
										}

										subnet
										siteSocketLanFirewallSource: site {
											id
											name
										}

										networkInterfaceSocketLanFirewallSource: networkInterface {
											id
											name
										}

										systemGroupSocketLanFirewallSource: systemGroup {
											id
											name
										}

										hostSocketLanFirewallSource: host {
											id
											name
										}

										ip
										globalIpRangeSocketLanFirewallSource: globalIpRange {
											id
											name
										}

										floatingSubnetSocketLanFirewallSource: floatingSubnet {
											id
											name
										}

										siteNetworkSubnetSocketLanFirewallSource: siteNetworkSubnet {
											id
											name
										}

									}
									destinationSocketLanFirewallRule: destination {
										vlan
										ipRangeSocketLanFirewallDestination: ipRange {
											from
											to
										}

										subnet
										siteSocketLanFirewallDestination: site {
											id
											name
										}

										networkInterfaceSocketLanFirewallDestination: networkInterface {
											id
											name
										}

										systemGroupSocketLanFirewallDestination: systemGroup {
											id
											name
										}

										hostSocketLanFirewallDestination: host {
											id
											name
										}

										ip
										globalIpRangeSocketLanFirewallDestination: globalIpRange {
											id
											name
										}

										groupSocketLanFirewallDestination: group {
											id
											name
										}

										floatingSubnetSocketLanFirewallDestination: floatingSubnet {
											id
											name
										}

										siteNetworkSubnetSocketLanFirewallDestination: siteNetworkSubnet {
											id
											name
										}

									}
									directionSocketLanFirewallRule: direction
									applicationSocketLanFirewallRule: application {
										applicationSocketLanFirewallApplication: application {
											id
											name
										}

										customAppSocketLanFirewallApplication: customApp {
											id
											name
										}

										domain
										fqdn
										ip
										subnet
										ipRangeSocketLanFirewallApplication: ipRange {
											from
											to
										}

										globalIpRangeSocketLanFirewallApplication: globalIpRange {
											id
											name
										}

									}
									serviceSocketLanFirewallRule: service {
										simpleSocketLanFirewallServiceType: simple {
											nameSimpleService: name
										}

										standardSocketLanFirewallServiceType: standard {
											id
											name
										}

										customSocketLanFirewallServiceType: custom {
											port
											portRangeCustomService: portRange {
												from
												to
											}
											protocolCustomService: protocol
										}

									}
									actionSocketLanFirewallRule: action
									trackingSocketLanFirewallRule: tracking {
										eventPolicyTracking: event {
											enabled
										}

										alertPolicyTracking: alert {
											enabled
											frequencyPolicyRuleTrackingAlert: frequency
											subscriptionGroupPolicyRuleTrackingAlert: subscriptionGroup {
												id
												name
											}
											webhookPolicyRuleTrackingAlert: webhook {
												id
												name
											}
											mailingListPolicyRuleTrackingAlert: mailingList {
												id
												name
											}
										}

									}
								}

								propertiesSocketLanFirewallRulePayload: properties
							}
							siteSocketLanRule: site {
								siteSocketLanSite: site {
									id
									name
								}

								groupSocketLanSite: group {
									id
									name
								}

							}
							sourceSocketLanRule: source {
								vlan
								ipRangeSocketLanSource: ipRange {
									from
									to
								}

								groupSocketLanSource: group {
									id
									name
								}

								subnet
								networkInterfaceSocketLanSource: networkInterface {
									id
									name
								}

								systemGroupSocketLanSource: systemGroup {
									id
									name
								}

								hostSocketLanSource: host {
									id
									name
								}

								ip
								globalIpRangeSocketLanSource: globalIpRange {
									id
									name
								}

								floatingSubnetSocketLanSource: floatingSubnet {
									id
									name
								}

								siteNetworkSubnetSocketLanSource: siteNetworkSubnet {
									id
									name
								}

							}
							destinationSocketLanRule: destination {
								vlan
								ipRangeSocketLanDestination: ipRange {
									from
									to
								}

								subnet
								networkInterfaceSocketLanDestination: networkInterface {
									id
									name
								}

								systemGroupSocketLanDestination: systemGroup {
									id
									name
								}

								hostSocketLanDestination: host {
									id
									name
								}

								ip
								globalIpRangeSocketLanDestination: globalIpRange {
									id
									name
								}

								groupSocketLanDestination: group {
									id
									name
								}

								floatingSubnetSocketLanDestination: floatingSubnet {
									id
									name
								}

								siteNetworkSubnetSocketLanDestination: siteNetworkSubnet {
									id
									name
								}

							}
							directionSocketLanRule: direction
							serviceSocketLanRule: service {
								simpleSocketLanService: simple {
									nameSimpleService: name
								}

								customSocketLanService: custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocolCustomService: protocol
								}

							}
							natSocketLanRule: nat {
								enabled
								natTypeSocketLanNatSettings: natType
							}
							transportSocketLanRule: transport
						}

						propertiesSocketLanRulePayload: properties
					}
					sectionsSocketLanPolicy: sections {
						auditPolicySectionPayload: audit {
							updatedTime
							updatedBy
						}

						sectionPolicySectionPayload: section {
							id
							name
						}

						propertiesPolicySectionPayload: properties
					}
					auditSocketLanPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionSocketLanPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}

				statusSocketLanPolicyMutationPayload: status
				errorsSocketLanPolicyMutationPayload: errors {
					errorMessage
					errorCode
				}

			}
		}

	}	
}