{
    "operationName": "policyWanFirewallPublishPolicyRevision",
    "query": "mutation policyWanFirewallPublishPolicyRevision ( $policyPublishRevisionInput:PolicyPublishRevisionInput $wanFirewallPolicyMutationInput:WanFirewallPolicyMutationInput ) { policy ( ) { wanFirewall ( input:$wanFirewallPolicyMutationInput ) { publishPolicyRevision ( input:$policyPublishRevisionInput ) {  wanFirewallPolicyPolicy: policy { enabled rules {  policyElementAuditAudit: audit {  updatedTime  updatedBy  }  wanFirewallRuleRule: rule {  id  name  description  index  policySectionInfoSection: section {  id  name  }  enabled  wanFirewallSourceSource: source {  hostRefHost: host {  id  name  }  siteRefSite: site {  id  name  }  subnet  ip  ipAddressRangeIpRange: ipRange {  from  to  }  globalIpRangeRefGlobalIpRange: globalIpRange {  id  name  }  networkInterfaceRefNetworkInterface: networkInterface {  id  name  }  siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {  id  name  }  floatingSubnetRefFloatingSubnet: floatingSubnet {  id  name  }  userRefUser: user {  id  name  }  usersGroupRefUsersGroup: usersGroup {  id  name  }  groupRefGroup: group {  id  name  }  systemGroupRefSystemGroup: systemGroup {  id  name  }  }  connectionOriginEnumConnectionOrigin: connectionOrigin  countryRefCountry: country {  id  name  }  deviceProfileRefDevice: device {  id  name  }  operatingSystemDeviceOS: deviceOS  deviceAttributesDeviceAttributes: deviceAttributes {  category  type  model  manufacturer  os  osVersion  }  wanFirewallDestinationDestination: destination {  hostRefHost: host {  id  name  }  siteRefSite: site {  id  name  }  subnet  ip  ipAddressRangeIpRange: ipRange {  from  to  }  globalIpRangeRefGlobalIpRange: globalIpRange {  id  name  }  networkInterfaceRefNetworkInterface: networkInterface {  id  name  }  siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {  id  name  }  floatingSubnetRefFloatingSubnet: floatingSubnet {  id  name  }  userRefUser: user {  id  name  }  usersGroupRefUsersGroup: usersGroup {  id  name  }  groupRefGroup: group {  id  name  }  systemGroupRefSystemGroup: systemGroup {  id  name  }  }  wanFirewallApplicationApplication: application {  applicationRefApplication: application {  id  name  }  applicationCategoryRefAppCategory: appCategory {  id  name  }  customApplicationRefCustomApp: customApp {  id  name  }  customCategoryRefCustomCategory: customCategory {  id  name  }  sanctionedAppsCategoryRefSanctionedAppsCategory: sanctionedAppsCategory {  id  name  }  domain  fqdn  ip  subnet  ipAddressRangeIpRange: ipRange {  from  to  }  globalIpRangeRefGlobalIpRange: globalIpRange {  id  name  }  }  wanFirewallServiceTypeService: service {  serviceRefStandard: standard {  id  name  }  customServiceCustom: custom {  port  portRangePortRange: portRange {   from   to  }  ipProtocolProtocol: protocol  }  }  wanFirewallActionEnumAction: action  policyTrackingTracking: tracking {  policyRuleTrackingEventEvent: event {  enabled  }  policyRuleTrackingAlertAlert: alert {  enabled  policyRuleTrackingFrequencyEnumFrequency: frequency  subscriptionGroupRefSubscriptionGroup: subscriptionGroup {   id   name  }  subscriptionWebhookRefWebhook: webhook {   id   name  }  subscriptionMailingListRefMailingList: mailingList {   id   name  }  }  }  policyScheduleSchedule: schedule {  policyActiveOnEnumActiveOn: activeOn  policyCustomTimeframeCustomTimeframe: customTimeframe {  from  to  }  policyCustomRecurringCustomRecurring: customRecurring {  from  to  days  }  }  wanFirewallDirectionEnumDirection: direction  wanFirewallRuleExceptionExceptions: exceptions {  name  wanFirewallSourceSource: source {  hostRefHost: host {   id   name  }  siteRefSite: site {   id   name  }  subnet  ip  ipAddressRangeIpRange: ipRange {   from   to  }  globalIpRangeRefGlobalIpRange: globalIpRange {   id   name  }  networkInterfaceRefNetworkInterface: networkInterface {   id   name  }  siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {   id   name  }  floatingSubnetRefFloatingSubnet: floatingSubnet {   id   name  }  userRefUser: user {   id   name  }  usersGroupRefUsersGroup: usersGroup {   id   name  }  groupRefGroup: group {   id   name  }  systemGroupRefSystemGroup: systemGroup {   id   name  }  }  operatingSystemDeviceOS: deviceOS  wanFirewallDestinationDestination: destination {  hostRefHost: host {   id   name  }  siteRefSite: site {   id   name  }  subnet  ip  ipAddressRangeIpRange: ipRange {   from   to  }  globalIpRangeRefGlobalIpRange: globalIpRange {   id   name  }  networkInterfaceRefNetworkInterface: networkInterface {   id   name  }  siteNetworkSubnetRefSiteNetworkSubnet: siteNetworkSubnet {   id   name  }  floatingSubnetRefFloatingSubnet: floatingSubnet {   id   name  }  userRefUser: user {   id   name  }  usersGroupRefUsersGroup: usersGroup {   id   name  }  groupRefGroup: group {   id   name  }  systemGroupRefSystemGroup: systemGroup {   id   name  }  }  countryRefCountry: country {  id  name  }  deviceProfileRefDevice: device {  id  name  }  deviceAttributesDeviceAttributes: deviceAttributes {  category  type  model  manufacturer  os  osVersion  }  wanFirewallApplicationApplication: application {  applicationRefApplication: application {   id   name  }  applicationCategoryRefAppCategory: appCategory {   id   name  }  customApplicationRefCustomApp: customApp {   id   name  }  customCategoryRefCustomCategory: customCategory {   id   name  }  sanctionedAppsCategoryRefSanctionedAppsCategory: sanctionedAppsCategory {   id   name  }  domain  fqdn  ip  subnet  ipAddressRangeIpRange: ipRange {   from   to  }  globalIpRangeRefGlobalIpRange: globalIpRange {   id   name  }  }  wanFirewallServiceTypeService: service {  serviceRefStandard: standard {   id   name  }  customServiceCustom: custom {   port   portRangePortRange: portRange {  from  to   }  ipProtocolProtocol: protocol  }  }  connectionOriginEnumConnectionOrigin: connectionOrigin  wanFirewallDirectionEnumDirection: direction  }  }  policyElementPropertiesEnumProperties: properties } sections {  policyElementAuditAudit: audit {  updatedTime  updatedBy  }  policySectionInfoSection: section {  id  name  }  policyElementPropertiesEnumProperties: properties } audit {  publishedTime  publishedBy } revision {  id  name  description  changes  createdTime  updatedTime }  } policyMutationStatusStatus: status  policyMutationErrorErrors: errors { errorMessage errorCode  }  } } } }",
    "variables": {
        "policyPublishRevisionInput": {
            "description": {
                "description": "String"
            },
            "name": {
                "name": "String"
            }
        },
        "wanFirewallPolicyMutationInput": {
            "policyMutationRevisionInput": {
                "id": {
                    "id": "ID"
                }
            }
        }
    }
}