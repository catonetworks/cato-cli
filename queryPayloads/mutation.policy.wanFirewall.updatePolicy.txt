mutation policyWanFirewallUpdatePolicy ( $wanFirewallPolicyUpdateInput:WanFirewallPolicyUpdateInput! $wanFirewallPolicyMutationInput:WanFirewallPolicyMutationInput ) {
	policy ( ) {
		wanFirewall ( input:$wanFirewallPolicyMutationInput  )  {
			updatePolicyWanFirewallPolicyMutations: updatePolicy ( input:$wanFirewallPolicyUpdateInput   ) {
				policyWanFirewallPolicyMutationPayload: policy {
					enabled
					rulesWanFirewallPolicy: rules {
						auditWanFirewallRulePayload: audit {
							updatedTime
							updatedBy
						}

						ruleWanFirewallRulePayload: rule {
							id
							name
							description
							index
							sectionWanFirewallRule: section {
								id
								name
							}
							enabled
							sourceWanFirewallRule: source {
								hostWanFirewallSource: host {
									id
									name
								}

								siteWanFirewallSource: site {
									id
									name
								}

								subnet
								ip
								ipRangeWanFirewallSource: ipRange {
									from
									to
								}

								globalIpRangeWanFirewallSource: globalIpRange {
									id
									name
								}

								networkInterfaceWanFirewallSource: networkInterface {
									id
									name
								}

								siteNetworkSubnetWanFirewallSource: siteNetworkSubnet {
									id
									name
								}

								floatingSubnetWanFirewallSource: floatingSubnet {
									id
									name
								}

								userWanFirewallSource: user {
									id
									name
								}

								usersGroupWanFirewallSource: usersGroup {
									id
									name
								}

								groupWanFirewallSource: group {
									id
									name
								}

								systemGroupWanFirewallSource: systemGroup {
									id
									name
								}

							}
							connectionOriginWanFirewallRule: connectionOrigin
							countryWanFirewallRule: country {
								id
								name
							}
							deviceWanFirewallRule: device {
								id
								name
							}
							deviceOSWanFirewallRule: deviceOS
							deviceAttributesWanFirewallRule: deviceAttributes {
								category
								type
								model
								manufacturer
								os
								osVersion
							}
							destinationWanFirewallRule: destination {
								hostWanFirewallDestination: host {
									id
									name
								}

								siteWanFirewallDestination: site {
									id
									name
								}

								subnet
								ip
								ipRangeWanFirewallDestination: ipRange {
									from
									to
								}

								globalIpRangeWanFirewallDestination: globalIpRange {
									id
									name
								}

								networkInterfaceWanFirewallDestination: networkInterface {
									id
									name
								}

								siteNetworkSubnetWanFirewallDestination: siteNetworkSubnet {
									id
									name
								}

								floatingSubnetWanFirewallDestination: floatingSubnet {
									id
									name
								}

								userWanFirewallDestination: user {
									id
									name
								}

								usersGroupWanFirewallDestination: usersGroup {
									id
									name
								}

								groupWanFirewallDestination: group {
									id
									name
								}

								systemGroupWanFirewallDestination: systemGroup {
									id
									name
								}

							}
							applicationWanFirewallRule: application {
								applicationWanFirewallApplication: application {
									id
									name
								}

								appCategoryWanFirewallApplication: appCategory {
									id
									name
								}

								customAppWanFirewallApplication: customApp {
									id
									name
								}

								customCategoryWanFirewallApplication: customCategory {
									id
									name
								}

								sanctionedAppsCategoryWanFirewallApplication: sanctionedAppsCategory {
									id
									name
								}

								domain
								fqdn
								ip
								subnet
								ipRangeWanFirewallApplication: ipRange {
									from
									to
								}

								globalIpRangeWanFirewallApplication: globalIpRange {
									id
									name
								}

							}
							serviceWanFirewallRule: service {
								standardWanFirewallServiceType: standard {
									id
									name
								}

								customWanFirewallServiceType: custom {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocolCustomService: protocol
								}

							}
							actionWanFirewallRule: action
							trackingWanFirewallRule: tracking {
								eventPolicyTracking: event {
									enabled
								}

								alertPolicyTracking: alert {
									enabled
									frequencyPolicyRuleTrackingAlert: frequency
									subscriptionGroupPolicyRuleTrackingAlert: subscriptionGroup {
										id
										name
									}
									webhookPolicyRuleTrackingAlert: webhook {
										id
										name
									}
									mailingListPolicyRuleTrackingAlert: mailingList {
										id
										name
									}
								}

							}
							scheduleWanFirewallRule: schedule {
								activeOnPolicySchedule: activeOn
								customTimeframePolicySchedule: customTimeframe {
									from
									to
								}

								customRecurringPolicySchedule: customRecurring {
									from
									to
									daysPolicyCustomRecurring: days
								}

							}
							activePeriodWanFirewallRule: activePeriod {
								useEffectiveFrom
								effectiveFrom
								useExpiresAt
								expiresAt
							}
							directionWanFirewallRule: direction
							exceptionsWanFirewallRule: exceptions {
								name
								sourceWanFirewallRuleException: source {
									hostWanFirewallSource: host {
										id
										name
									}
									siteWanFirewallSource: site {
										id
										name
									}
									subnet
									ip
									ipRangeWanFirewallSource: ipRange {
										from
										to
									}
									globalIpRangeWanFirewallSource: globalIpRange {
										id
										name
									}
									networkInterfaceWanFirewallSource: networkInterface {
										id
										name
									}
									siteNetworkSubnetWanFirewallSource: siteNetworkSubnet {
										id
										name
									}
									floatingSubnetWanFirewallSource: floatingSubnet {
										id
										name
									}
									userWanFirewallSource: user {
										id
										name
									}
									usersGroupWanFirewallSource: usersGroup {
										id
										name
									}
									groupWanFirewallSource: group {
										id
										name
									}
									systemGroupWanFirewallSource: systemGroup {
										id
										name
									}
								}

								deviceOSWanFirewallRuleException: deviceOS
								destinationWanFirewallRuleException: destination {
									hostWanFirewallDestination: host {
										id
										name
									}
									siteWanFirewallDestination: site {
										id
										name
									}
									subnet
									ip
									ipRangeWanFirewallDestination: ipRange {
										from
										to
									}
									globalIpRangeWanFirewallDestination: globalIpRange {
										id
										name
									}
									networkInterfaceWanFirewallDestination: networkInterface {
										id
										name
									}
									siteNetworkSubnetWanFirewallDestination: siteNetworkSubnet {
										id
										name
									}
									floatingSubnetWanFirewallDestination: floatingSubnet {
										id
										name
									}
									userWanFirewallDestination: user {
										id
										name
									}
									usersGroupWanFirewallDestination: usersGroup {
										id
										name
									}
									groupWanFirewallDestination: group {
										id
										name
									}
									systemGroupWanFirewallDestination: systemGroup {
										id
										name
									}
								}

								countryWanFirewallRuleException: country {
									id
									name
								}

								deviceWanFirewallRuleException: device {
									id
									name
								}

								deviceAttributesWanFirewallRuleException: deviceAttributes {
									category
									type
									model
									manufacturer
									os
									osVersion
								}

								applicationWanFirewallRuleException: application {
									applicationWanFirewallApplication: application {
										id
										name
									}
									appCategoryWanFirewallApplication: appCategory {
										id
										name
									}
									customAppWanFirewallApplication: customApp {
										id
										name
									}
									customCategoryWanFirewallApplication: customCategory {
										id
										name
									}
									sanctionedAppsCategoryWanFirewallApplication: sanctionedAppsCategory {
										id
										name
									}
									domain
									fqdn
									ip
									subnet
									ipRangeWanFirewallApplication: ipRange {
										from
										to
									}
									globalIpRangeWanFirewallApplication: globalIpRange {
										id
										name
									}
								}

								serviceWanFirewallRuleException: service {
									standardWanFirewallServiceType: standard {
										id
										name
									}
									customWanFirewallServiceType: custom {
										port
										portRangeCustomService: portRange {
											from
											to
										}

										protocolCustomService: protocol
									}
								}

								connectionOriginWanFirewallRuleException: connectionOrigin
								directionWanFirewallRuleException: direction
							}
						}

						propertiesWanFirewallRulePayload: properties
					}
					sectionsWanFirewallPolicy: sections {
						auditPolicySectionPayload: audit {
							updatedTime
							updatedBy
						}

						sectionPolicySectionPayload: section {
							id
							name
						}

						propertiesPolicySectionPayload: properties
					}
					auditWanFirewallPolicy: audit {
						publishedTime
						publishedBy
					}
					revisionWanFirewallPolicy: revision {
						id
						name
						description
						changes
						createdTime
						updatedTime
					}
				}

				statusWanFirewallPolicyMutationPayload: status
				errorsWanFirewallPolicyMutationPayload: errors {
					errorMessage
					errorCode
				}

			}
		}

	}	
}