mutation policyWanNetworkRemoveRule ( $wanNetworkRemoveRuleInput:WanNetworkRemoveRuleInput! $wanNetworkPolicyMutationInput:WanNetworkPolicyMutationInput ) {
	policy ( ) {
		wanNetwork ( input:$wanNetworkPolicyMutationInput  )  {
			removeRuleWanNetworkPolicyMutations: removeRule ( input:$wanNetworkRemoveRuleInput   ) {
				ruleWanNetworkRuleMutationPayload: rule {
					auditWanNetworkRulePayload: audit {
						updatedTime
						updatedBy
					}
					ruleWanNetworkRulePayload: rule {
						id
						name
						description
						index
						sectionWanNetworkRule: section {
							id
							name
						}

						enabled
						ruleTypeWanNetworkRule: ruleType
						routeTypeWanNetworkRule: routeType
						sourceWanNetworkRule: source {
							userWanNetworkRuleSource: user {
								id
								name
							}
							floatingSubnetWanNetworkRuleSource: floatingSubnet {
								id
								name
							}
							globalIpRangeWanNetworkRuleSource: globalIpRange {
								id
								name
							}
							groupWanNetworkRuleSource: group {
								id
								name
							}
							hostWanNetworkRuleSource: host {
								id
								name
							}
							ip
							ipRangeWanNetworkRuleSource: ipRange {
								from
								to
							}
							networkInterfaceWanNetworkRuleSource: networkInterface {
								id
								name
							}
							subnet
							siteWanNetworkRuleSource: site {
								id
								name
							}
							siteNetworkSubnetWanNetworkRuleSource: siteNetworkSubnet {
								id
								name
							}
							systemGroupWanNetworkRuleSource: systemGroup {
								id
								name
							}
							usersGroupWanNetworkRuleSource: usersGroup {
								id
								name
							}
						}

						destinationWanNetworkRule: destination {
							userWanNetworkRuleDestination: user {
								id
								name
							}
							floatingSubnetWanNetworkRuleDestination: floatingSubnet {
								id
								name
							}
							globalIpRangeWanNetworkRuleDestination: globalIpRange {
								id
								name
							}
							groupWanNetworkRuleDestination: group {
								id
								name
							}
							hostWanNetworkRuleDestination: host {
								id
								name
							}
							ip
							ipRangeWanNetworkRuleDestination: ipRange {
								from
								to
							}
							networkInterfaceWanNetworkRuleDestination: networkInterface {
								id
								name
							}
							subnet
							siteWanNetworkRuleDestination: site {
								id
								name
							}
							siteNetworkSubnetWanNetworkRuleDestination: siteNetworkSubnet {
								id
								name
							}
							systemGroupWanNetworkRuleDestination: systemGroup {
								id
								name
							}
							usersGroupWanNetworkRuleDestination: usersGroup {
								id
								name
							}
						}

						applicationWanNetworkRule: application {
							applicationWanNetworkRuleApplication: application {
								id
								name
							}
							appCategoryWanNetworkRuleApplication: appCategory {
								id
								name
							}
							customAppWanNetworkRuleApplication: customApp {
								id
								name
							}
							customCategoryWanNetworkRuleApplication: customCategory {
								id
								name
							}
							customServiceIpWanNetworkRuleApplication: customServiceIp {
								name
								ip
								ipRangeCustomServiceIp: ipRange {
									from
									to
								}

							}
							customServiceWanNetworkRuleApplication: customService {
								port
								portRangeCustomService: portRange {
									from
									to
								}

								protocolCustomService: protocol
							}
							domain
							fqdn
							serviceWanNetworkRuleApplication: service {
								id
								name
							}
						}

						configurationWanNetworkRule: configuration {
							activeTcpAcceleration
							packetLossMitigation
							preserveSourcePort
							primaryTransportWanNetworkRuleConfiguration: primaryTransport {
								transportTypeWanNetworkRuleTransport: transportType
								primaryInterfaceRoleWanNetworkRuleTransport: primaryInterfaceRole
								secondaryInterfaceRoleWanNetworkRuleTransport: secondaryInterfaceRole
							}
							secondaryTransportWanNetworkRuleConfiguration: secondaryTransport {
								transportTypeWanNetworkRuleTransport: transportType
								primaryInterfaceRoleWanNetworkRuleTransport: primaryInterfaceRole
								secondaryInterfaceRoleWanNetworkRuleTransport: secondaryInterfaceRole
							}
							allocationIpWanNetworkRuleConfiguration: allocationIp {
								id
								name
							}
							popLocationWanNetworkRuleConfiguration: popLocation {
								id
								name
							}
							backhaulingSiteWanNetworkRuleConfiguration: backhaulingSite {
								id
								name
							}
						}

						bandwidthPriorityWanNetworkRule: bandwidthPriority {
							id
							name
						}

						exceptionsWanNetworkRule: exceptions {
							name
							sourceWanNetworkRuleException: source {
								userWanNetworkRuleSource: user {
									id
									name
								}

								floatingSubnetWanNetworkRuleSource: floatingSubnet {
									id
									name
								}

								globalIpRangeWanNetworkRuleSource: globalIpRange {
									id
									name
								}

								groupWanNetworkRuleSource: group {
									id
									name
								}

								hostWanNetworkRuleSource: host {
									id
									name
								}

								ip
								ipRangeWanNetworkRuleSource: ipRange {
									from
									to
								}

								networkInterfaceWanNetworkRuleSource: networkInterface {
									id
									name
								}

								subnet
								siteWanNetworkRuleSource: site {
									id
									name
								}

								siteNetworkSubnetWanNetworkRuleSource: siteNetworkSubnet {
									id
									name
								}

								systemGroupWanNetworkRuleSource: systemGroup {
									id
									name
								}

								usersGroupWanNetworkRuleSource: usersGroup {
									id
									name
								}

							}
							destinationWanNetworkRuleException: destination {
								userWanNetworkRuleDestination: user {
									id
									name
								}

								floatingSubnetWanNetworkRuleDestination: floatingSubnet {
									id
									name
								}

								globalIpRangeWanNetworkRuleDestination: globalIpRange {
									id
									name
								}

								groupWanNetworkRuleDestination: group {
									id
									name
								}

								hostWanNetworkRuleDestination: host {
									id
									name
								}

								ip
								ipRangeWanNetworkRuleDestination: ipRange {
									from
									to
								}

								networkInterfaceWanNetworkRuleDestination: networkInterface {
									id
									name
								}

								subnet
								siteWanNetworkRuleDestination: site {
									id
									name
								}

								siteNetworkSubnetWanNetworkRuleDestination: siteNetworkSubnet {
									id
									name
								}

								systemGroupWanNetworkRuleDestination: systemGroup {
									id
									name
								}

								usersGroupWanNetworkRuleDestination: usersGroup {
									id
									name
								}

							}
							applicationWanNetworkRuleException: application {
								applicationWanNetworkRuleApplication: application {
									id
									name
								}

								appCategoryWanNetworkRuleApplication: appCategory {
									id
									name
								}

								customAppWanNetworkRuleApplication: customApp {
									id
									name
								}

								customCategoryWanNetworkRuleApplication: customCategory {
									id
									name
								}

								customServiceIpWanNetworkRuleApplication: customServiceIp {
									name
									ip
									ipRangeCustomServiceIp: ipRange {
										from
										to
									}
								}

								customServiceWanNetworkRuleApplication: customService {
									port
									portRangeCustomService: portRange {
										from
										to
									}
									protocolCustomService: protocol
								}

								domain
								fqdn
								serviceWanNetworkRuleApplication: service {
									id
									name
								}

							}
						}

					}
					propertiesWanNetworkRulePayload: properties
				}

				statusWanNetworkRuleMutationPayload: status
				errorsWanNetworkRuleMutationPayload: errors {
					errorMessage
					errorCode
				}

			}
		}

	}	
}