{
    "operationName": "siteRemoveBgpPeer",
    "query": "mutation siteRemoveBgpPeer ( $removeBgpPeerInput:RemoveBgpPeerInput! ) { site ( ) { removeBgpPeer ( input:$removeBgpPeerInput ) { bgpPeer {  siteRefSite: site { id name  } id  name  peerAsn  catoAsn  peerIp  catoIp  advertiseDefaultRoute  advertiseAllRoutes  advertiseSummaryRoutes  bgpSummaryRouteSummaryRoute: summaryRoute { id route bgpCommunityCommunity: community {  from  to }  } bgpDefaultActionDefaultAction: defaultAction  bgpFilterRuleDefaultActionExclusion: defaultActionExclusion { bgpRouteExactFilterRuleBgpRouteExactFilterRule: bgpRouteExactFilterRule {  id  globalIpRange {  id  name  }  networkSubnet } bgpRouteExactAndInclusiveFilterRuleBgpRouteExactAndInclusiveFilterRule: bgpRouteExactAndInclusiveFilterRule {  id  globalIpRange {  id  name  }  globalIpRangeException {  id  name  }  networkSubnet  networkSubnetException  le  ge } bgpCommunityFilterRuleCommunityFilterRule: communityFilterRule {  id  predicate  community {  from  to  }  }  } performNat  md5AuthKey  metric  holdTime  keepaliveInterval  bfdEnabled  bfdSettingsBfdSettings: bfdSettings { transmitInterval receiveInterval multiplier  } bgpTrackingTracking: tracking { id enabled alertFrequency subscriptionId  }  } } } }",
    "variables": {
        "removeBgpPeerInput": {
            "id": {
                "id": "ID"
            }
        }
    }
}