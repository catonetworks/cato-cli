{
    "operationName": "siteUpdateBgpPeer",
    "query": "mutation siteUpdateBgpPeer ( $updateBgpPeerInput:UpdateBgpPeerInput!) {\n\tsite ( ) {\nmutation.site.updateBgpPeerupdateBgpPeer ( input:$updateBgpPeerInput  )  {\nmutation.site.updateBgpPeer\tbgpPeer {\nmutation.site.updateBgpPeer\t\tsite {\nmutation.site.updateBgpPeer\t\t\tid\nmutation.site.updateBgpPeer\t\t\tname\nmutation.site.updateBgpPeer\t\t}\nmutation.site.updateBgpPeer\t\tid\nmutation.site.updateBgpPeer\t\tname\nmutation.site.updateBgpPeer\t\tpeerAsn\nmutation.site.updateBgpPeer\t\tcatoAsn\nmutation.site.updateBgpPeer\t\tpeerIp\nmutation.site.updateBgpPeer\t\tcatoIp\nmutation.site.updateBgpPeer\t\tadvertiseDefaultRoute\nmutation.site.updateBgpPeer\t\tadvertiseAllRoutes\nmutation.site.updateBgpPeer\t\tadvertiseSummaryRoutes\nmutation.site.updateBgpPeer\t\tsummaryRoute {\nmutation.site.updateBgpPeer\t\t\tid\nmutation.site.updateBgpPeer\t\t\troute\nmutation.site.updateBgpPeer\t\t\tcommunity {\nmutation.site.updateBgpPeer\t\t\t\tfrom\nmutation.site.updateBgpPeer\t\t\t\tto\nmutation.site.updateBgpPeer\t\t\t}\nmutation.site.updateBgpPeer\t\t}\nmutation.site.updateBgpPeer\t\tdefaultAction\nmutation.site.updateBgpPeer\t\tdefaultActionExclusion {\nmutation.site.updateBgpPeer\t\t\tbgpRouteExactFilterRule {\nmutation.site.updateBgpPeer\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\tglobalIpRange {\nmutation.site.updateBgpPeer\t\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\t\tname\nmutation.site.updateBgpPeer\t\t\t\t}\nmutation.site.updateBgpPeer\t\t\t\tnetworkSubnet\nmutation.site.updateBgpPeer\t\t\t}\nmutation.site.updateBgpPeer\t\t\tbgpRouteExactAndInclusiveFilterRule {\nmutation.site.updateBgpPeer\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\tglobalIpRange {\nmutation.site.updateBgpPeer\t\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\t\tname\nmutation.site.updateBgpPeer\t\t\t\t}\nmutation.site.updateBgpPeer\t\t\t\tglobalIpRangeException {\nmutation.site.updateBgpPeer\t\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\t\tname\nmutation.site.updateBgpPeer\t\t\t\t}\nmutation.site.updateBgpPeer\t\t\t\tnetworkSubnet\nmutation.site.updateBgpPeer\t\t\t\tnetworkSubnetException\nmutation.site.updateBgpPeer\t\t\t\tle\nmutation.site.updateBgpPeer\t\t\t\tge\nmutation.site.updateBgpPeer\t\t\t}\nmutation.site.updateBgpPeer\t\t\tcommunityFilterRule {\nmutation.site.updateBgpPeer\t\t\t\tid\nmutation.site.updateBgpPeer\t\t\t\tpredicate\nmutation.site.updateBgpPeer\t\t\t\tcommunity {\nmutation.site.updateBgpPeer\t\t\t\t\tfrom\nmutation.site.updateBgpPeer\t\t\t\t\tto\nmutation.site.updateBgpPeer\t\t\t\t}\nmutation.site.updateBgpPeer\t\t\t}\nmutation.site.updateBgpPeer\t\t}\nmutation.site.updateBgpPeer\t\tperformNat\nmutation.site.updateBgpPeer\t\tmd5AuthKey\nmutation.site.updateBgpPeer\t\tmetric {\n\tname\n\tvalue\n}\nmutation.site.updateBgpPeer\t\tholdTime\nmutation.site.updateBgpPeer\t\tkeepaliveInterval\nmutation.site.updateBgpPeer\t\tbfdEnabled\nmutation.site.updateBgpPeer\t\tbfdSettings {\nmutation.site.updateBgpPeer\t\t\ttransmitInterval\nmutation.site.updateBgpPeer\t\t\treceiveInterval\nmutation.site.updateBgpPeer\t\t\tmultiplier\nmutation.site.updateBgpPeer\t\t}\nmutation.site.updateBgpPeer\t\ttracking {\nmutation.site.updateBgpPeer\t\t\tid\nmutation.site.updateBgpPeer\t\t\tenabled\nmutation.site.updateBgpPeer\t\t\talertFrequency\nmutation.site.updateBgpPeer\t\t\tsubscriptionId\nmutation.site.updateBgpPeer\t\t}\nmutation.site.updateBgpPeer\t}\nmutation.site.updateBgpPeer}\n\t}\t\n}",
    "variables": {
        "updateBgpPeerInput": {
            "advertiseAllRoutes": true,
            "advertiseDefaultRoute": true,
            "advertiseSummaryRoutes": true,
            "bfdEnabled": true,
            "bfdSettingsInput": {
                "multiplier": 1,
                "receiveInterval": 1,
                "transmitInterval": 1
            },
            "bgpFilterRuleInput": {
                "bgpRouteExactAndInclusiveFilterRule": {
                    "ge": 1,
                    "globalIpRange": {
                        "by": "ID",
                        "input": "string"
                    },
                    "globalIpRangeException": {
                        "by": "ID",
                        "input": "string"
                    },
                    "le": 1,
                    "networkSubnet": [
                        "example1",
                        "example2"
                    ],
                    "networkSubnetException": [
                        "example1",
                        "example2"
                    ]
                },
                "bgpRouteExactFilterRule": {
                    "globalIpRange": {
                        "by": "ID",
                        "input": "string"
                    },
                    "networkSubnet": [
                        "example1",
                        "example2"
                    ]
                },
                "communityFilterRule": {
                    "community": {
                        "from": "example_value",
                        "to": "example_value"
                    },
                    "predicate": "EQUAL"
                }
            },
            "bgpSummaryRouteInput": {
                "community": {
                    "from": "example_value",
                    "to": "example_value"
                },
                "route": "example_value"
            },
            "bgpTrackingInput": {
                "alertFrequency": "HOURLY",
                "enabled": true,
                "subscriptionId": "id"
            },
            "catoAsn": "example_value",
            "defaultAction": "DROP",
            "holdTime": 1,
            "id": "id",
            "keepaliveInterval": 1,
            "md5AuthKey": "string",
            "metric": 1,
            "name": "string",
            "peerAsn": "example_value",
            "peerIp": "example_value",
            "performNat": true
        }
    }
}