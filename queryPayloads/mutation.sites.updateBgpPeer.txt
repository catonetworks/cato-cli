mutation sitesUpdateBgpPeer ( $updateBgpPeerInput:UpdateBgpPeerInput! ) {
	sites ( ) {
		updateBgpPeer ( input:$updateBgpPeerInput  )  {
			bgpPeerUpdateBgpPeerPayload: bgpPeer {
				siteBgpPeer: site {
					id
					name
				}

				id
				name
				peerAsn
				catoAsn
				peerIp
				catoIp
				advertiseDefaultRoute
				advertiseAllRoutes
				advertiseSummaryRoutes
				summaryRouteBgpPeer: summaryRoute {
					id
					route
					communityBgpSummaryRoute: community {
						from
						to
					}
				}

				defaultActionBgpPeer: defaultAction
				defaultActionExclusionBgpPeer: defaultActionExclusion {
					bgpRouteExactFilterRuleBgpFilterRule: bgpRouteExactFilterRule {
						id
						globalIpRange {
							id
							name
						}

						networkSubnet
					}
					bgpRouteExactAndInclusiveFilterRuleBgpFilterRule: bgpRouteExactAndInclusiveFilterRule {
						id
						globalIpRange {
							id
							name
						}

						globalIpRangeException {
							id
							name
						}

						networkSubnet
						networkSubnetException
						le
						ge
					}
					communityFilterRuleBgpFilterRule: communityFilterRule {
						id
						predicate
						community {
							from
							to
						}

					}
				}

				performNat
				md5AuthKey
				metric
				holdTime
				keepaliveInterval
				bfdEnabled
				bfdSettingsBgpPeer: bfdSettings {
					transmitInterval
					receiveInterval
					multiplier
				}

				trackingBgpPeer: tracking {
					id
					enabled
					alertFrequencyBgpTracking: alertFrequency
					subscriptionId
				}

			}
		}

	}	
}