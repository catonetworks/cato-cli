query policyRemotePortFwdPolicy ( $remotePortFwdPolicyInput:RemotePortFwdPolicyInput ) {
	policy ( ) {
		remotePortFwd {
			policyRemotePortFwdPolicyQueries: policy ( input:$remotePortFwdPolicyInput   ) {
				enabled
				rulesRemotePortFwdPolicy: rules {
					auditRemotePortFwdRulePayload: audit {
						updatedTime
						updatedBy
					}
					ruleRemotePortFwdRulePayload: rule {
						id
						name
						description
						index
						sectionRemotePortFwdRule: section {
							id
							name
						}

						enabled
						forwardIcmp
						externalIpRemotePortFwdRule: externalIp {
							id
							name
						}

						externalPortRangeRemotePortFwdRule: externalPortRange {
							from
							to
						}

						internalIp
						internalPortRangeRemotePortFwdRule: internalPortRange {
							from
							to
						}

						remoteIPsRemotePortFwdRule: remoteIPs {
							ip
							ipRangeRemotePortFwdRemoteIps: ipRange {
								from
								to
							}
							subnet
							globalIpRangeRemotePortFwdRemoteIps: globalIpRange {
								id
								name
							}
						}

						restrictionTypeRemotePortFwdRule: restrictionType
						trackingRemotePortFwdRule: tracking {
							enabled
							frequencyPolicyRuleTrackingAlert: frequency
							subscriptionGroupPolicyRuleTrackingAlert: subscriptionGroup {
								id
								name
							}
							webhookPolicyRuleTrackingAlert: webhook {
								id
								name
							}
							mailingListPolicyRuleTrackingAlert: mailingList {
								id
								name
							}
						}

					}
					propertiesRemotePortFwdRulePayload: properties
				}

				sectionsRemotePortFwdPolicy: sections {
					auditPolicySectionPayload: audit {
						updatedTime
						updatedBy
					}
					sectionPolicySectionPayload: section {
						id
						name
					}
					propertiesPolicySectionPayload: properties
				}

				auditRemotePortFwdPolicy: audit {
					publishedTime
					publishedBy
				}

				revisionRemotePortFwdPolicy: revision {
					id
					name
					description
					changes
					createdTime
					updatedTime
				}

			}
		}

	}	
}