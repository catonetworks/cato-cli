{
    "operationName": "site",
    "query": "query site ( $cloudInterconnectPhysicalConnectionInput:CloudInterconnectPhysicalConnectionInput! $cloudInterconnectPhysicalConnectionIdInput:CloudInterconnectPhysicalConnectionIdInput! $cloudInterconnectConnectionConnectivityInput:CloudInterconnectConnectionConnectivityInput! $bgpPeerRefInput:BgpPeerRefInput! $bgpPeerListInput:BgpPeerListInput! $siteBgpStatusInput:SiteBgpStatusInput! $availableVersionListInput:AvailableVersionListInput! ) {\n\tsite ( ) {\n\t\tcloudInterconnectPhysicalConnection ( input:$cloudInterconnectPhysicalConnectionInput  )  {\n\t\t\tid\n\t\t\tsite {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thaRole\n\t\t\tpopLocation {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tserviceProviderName\n\t\t\tencapsulationMethod\n\t\t\tsubnet\n\t\t\tprivateCatoIp\n\t\t\tprivateSiteIp\n\t\t\tupstreamBwLimit\n\t\t\tdownstreamBwLimit\n\t\t\tvlan\n\t\t\tsVlan\n\t\t\tcVlan\n\t\t}\n\n\t\tcloudInterconnectPhysicalConnectionId ( input:$cloudInterconnectPhysicalConnectionIdInput  )  {\n\t\t\tid\n\t\t}\n\n\t\tcloudInterconnectConnectionConnectivity ( input:$cloudInterconnectConnectionConnectivityInput  )  {\n\t\t\tsuccess\n\t\t}\n\n\t\tbgpPeer ( input:$bgpPeerRefInput  )  {\n\t\t\tsite {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tid\n\t\t\tname\n\t\t\tpeerAsn\n\t\t\tcatoAsn\n\t\t\tpeerIp\n\t\t\tcatoIp\n\t\t\tadvertiseDefaultRoute\n\t\t\tadvertiseAllRoutes\n\t\t\tadvertiseSummaryRoutes\n\t\t\tsummaryRoute {\n\t\t\t\tid\n\t\t\t\troute\n\t\t\t\tbgpCommunityCommunity: community {\n\t\t\t\t\tfrom\n\t\t\t\t\tto\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tdefaultAction\n\t\t\tdefaultActionExclusion {\n\t\t\t\tbgpRouteExactFilterRuleBgpRouteExactFilterRule: bgpRouteExactFilterRule {\n\t\t\t\t\tid\n\t\t\t\t\tglobalIpRange {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tnetworkSubnet\n\t\t\t\t}\n\n\t\t\t\tbgpRouteExactAndInclusiveFilterRuleBgpRouteExactAndInclusiveFilterRule: bgpRouteExactAndInclusiveFilterRule {\n\t\t\t\t\tid\n\t\t\t\t\tglobalIpRange {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tglobalIpRangeException {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tnetworkSubnet\n\t\t\t\t\tnetworkSubnetException\n\t\t\t\t\tle\n\t\t\t\t\tge\n\t\t\t\t}\n\n\t\t\t\tbgpCommunityFilterRuleCommunityFilterRule: communityFilterRule {\n\t\t\t\t\tid\n\t\t\t\t\tpredicate\n\t\t\t\t\tcommunity {\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\tto\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tperformNat\n\t\t\tmd5AuthKey\n\t\t\tmetric\n\t\t\tholdTime\n\t\t\tkeepaliveInterval\n\t\t\tbfdEnabled\n\t\t\tbfdSettings {\n\t\t\t\ttransmitInterval\n\t\t\t\treceiveInterval\n\t\t\t\tmultiplier\n\t\t\t}\n\t\t\ttracking {\n\t\t\t\tid\n\t\t\t\tenabled\n\t\t\t\talertFrequency\n\t\t\t\tsubscriptionId\n\t\t\t}\n\t\t}\n\n\t\tbgpPeerList ( input:$bgpPeerListInput  )  {\n\t\t\tbgpPeer {\n\t\t\t\tsiteRefSite: site {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tpeerAsn\n\t\t\t\tcatoAsn\n\t\t\t\tpeerIp\n\t\t\t\tcatoIp\n\t\t\t\tadvertiseDefaultRoute\n\t\t\t\tadvertiseAllRoutes\n\t\t\t\tadvertiseSummaryRoutes\n\t\t\t\tbgpSummaryRouteSummaryRoute: summaryRoute {\n\t\t\t\t\tid\n\t\t\t\t\troute\n\t\t\t\t\tbgpCommunityCommunity: community {\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\tto\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbgpDefaultActionDefaultAction: defaultAction\n\t\t\t\tbgpFilterRuleDefaultActionExclusion: defaultActionExclusion {\n\t\t\t\t\tbgpRouteExactFilterRuleBgpRouteExactFilterRule: bgpRouteExactFilterRule {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tglobalIpRange {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnetworkSubnet\n\t\t\t\t\t}\n\t\t\t\t\tbgpRouteExactAndInclusiveFilterRuleBgpRouteExactAndInclusiveFilterRule: bgpRouteExactAndInclusiveFilterRule {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tglobalIpRange {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tglobalIpRangeException {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnetworkSubnet\n\t\t\t\t\t\tnetworkSubnetException\n\t\t\t\t\t\tle\n\t\t\t\t\t\tge\n\t\t\t\t\t}\n\t\t\t\t\tbgpCommunityFilterRuleCommunityFilterRule: communityFilterRule {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tpredicate\n\t\t\t\t\t\tcommunity {\n\t\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\tto\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tperformNat\n\t\t\t\tmd5AuthKey\n\t\t\t\tmetric\n\t\t\t\tholdTime\n\t\t\t\tkeepaliveInterval\n\t\t\t\tbfdEnabled\n\t\t\t\tbfdSettingsBfdSettings: bfdSettings {\n\t\t\t\t\ttransmitInterval\n\t\t\t\t\treceiveInterval\n\t\t\t\t\tmultiplier\n\t\t\t\t}\n\n\t\t\t\tbgpTrackingTracking: tracking {\n\t\t\t\t\tid\n\t\t\t\t\tenabled\n\t\t\t\t\talertFrequency\n\t\t\t\t\tsubscriptionId\n\t\t\t\t}\n\n\t\t\t}\n\t\t\ttotal\n\t\t}\n\n\t\tsiteBgpStatus ( input:$siteBgpStatusInput  )  {\n\t\t\tstatus {\n\t\t\t\tremoteIp\n\t\t\t\tbgpSession\n\t\t\t\tbfdSession\n\t\t\t\troutesFromPeer\n\t\t\t\troutesToPeer\n\t\t\t\tbgpRejectedRoutesFromPeerRejectedRoutesFromPeer: rejectedRoutesFromPeer {\n\t\t\t\t\tsubnet\n\t\t\t\t\ttype\n\t\t\t\t\tbgpCommunityCommunity: community {\n\t\t\t\t\t\tfrom\n\t\t\t\t\t\tto\n\t\t\t\t\t}\n\t\t\t\t\trule\n\t\t\t\t\tlastPublishAttempt\n\t\t\t\t}\n\n\t\t\t}\n\t\t\trawStatus\n\t\t}\n\n\t\tavailableVersionList ( input:$availableVersionListInput  )  {\n\t\t\titems {\n\t\t\t\tplatform\n\t\t\t\tversions\n\t\t\t}\n\t\t}\n\n\t}\t\n}",
    "variables": {
        "availableVersionListInput": {
            "platforms": {
                "platforms": [
                    "String"
                ]
            }
        },
        "bgpPeerListInput": {
            "siteRefInput": {
                "by": {
                    "by": "enum(ObjectRefBy)"
                },
                "input": {
                    "input": "String"
                }
            }
        },
        "bgpPeerRefInput": {
            "by": {
                "by": "enum(ObjectRefBy)"
            },
            "input": {
                "input": "String"
            }
        },
        "cloudInterconnectConnectionConnectivityInput": {
            "id": {
                "id": "ID"
            }
        },
        "cloudInterconnectPhysicalConnectionIdInput": {
            "haRole": {
                "haRole": "enum(HaRole)"
            },
            "siteRefInput": {
                "by": {
                    "by": "enum(ObjectRefBy)"
                },
                "input": {
                    "input": "String"
                }
            }
        },
        "cloudInterconnectPhysicalConnectionInput": {
            "id": {
                "id": "ID"
            }
        },
        "siteBgpStatusInput": {
            "siteRefInput": {
                "by": {
                    "by": "enum(ObjectRefBy)"
                },
                "input": {
                    "input": "String"
                }
            }
        }
    }
}